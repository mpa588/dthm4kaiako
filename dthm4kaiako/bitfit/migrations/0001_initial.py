# Generated by Django 2.1.5 on 2019-03-21 22:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0004_auto_20190215_1612'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user_code', models.TextField()),
                ('passed_tests', models.BooleanField(default=False)),
                ('is_save', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_name', models.CharField(max_length=100, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Earned',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bitfit.Badge')),
            ],
        ),
        migrations.CreateModel(
            name='LoginDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('points', models.IntegerField(default=0)),
                ('goal', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)])),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('question_text', models.TextField()),
                ('solution', models.TextField()),
            ],
            options={
                'verbose_name': 'Parsons Problem',
                'verbose_name_plural': 'All Questions & Parsons Problems',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('hint', models.CharField(max_length=500)),
                ('subskills', models.ManyToManyField(blank=True, to='bitfit.Skill')),
            ],
        ),
        migrations.CreateModel(
            name='SkillArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_input', models.CharField(blank=True, max_length=500)),
                ('expected_output', models.CharField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Buggy',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bitfit.Question')),
                ('buggy_program', models.TextField()),
            ],
            options={
                'verbose_name': 'Debugging Question (Program)',
                'verbose_name_plural': 'All Debugging Questions',
            },
            bases=('bitfit.question',),
        ),
        migrations.CreateModel(
            name='Programming',
            fields=[
                ('question_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bitfit.Question')),
            ],
            options={
                'verbose_name': 'Programming Question (Program)',
                'verbose_name_plural': 'All Programming Questions',
            },
            bases=('bitfit.question',),
        ),
        migrations.CreateModel(
            name='TestCaseFunction',
            fields=[
                ('testcase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bitfit.TestCase')),
                ('function_params', models.CharField(blank=True, max_length=500)),
                ('expected_return', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Function Test Case',
            },
            bases=('bitfit.testcase',),
        ),
        migrations.CreateModel(
            name='TestCaseProgram',
            fields=[
                ('testcase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bitfit.TestCase')),
            ],
            options={
                'verbose_name': 'Program Test Case',
            },
            bases=('bitfit.testcase',),
        ),
        migrations.AddField(
            model_name='question',
            name='skill_areas',
            field=models.ManyToManyField(related_name='questions', to='bitfit.SkillArea'),
        ),
        migrations.AddField(
            model_name='question',
            name='skills',
            field=models.ManyToManyField(blank=True, to='bitfit.Skill'),
        ),
        migrations.AddField(
            model_name='profile',
            name='attempted_questions',
            field=models.ManyToManyField(through='bitfit.Attempt', to='bitfit.Question'),
        ),
        migrations.AddField(
            model_name='profile',
            name='earned_badges',
            field=models.ManyToManyField(through='bitfit.Earned', to='bitfit.Badge'),
        ),
        migrations.AddField(
            model_name='loginday',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bitfit.Profile'),
        ),
        migrations.AddField(
            model_name='earned',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bitfit.Profile'),
        ),
        migrations.AddField(
            model_name='attempt',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bitfit.Profile'),
        ),
        migrations.AddField(
            model_name='attempt',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bitfit.Question'),
        ),
        migrations.AddField(
            model_name='attempt',
            name='skills_hinted',
            field=models.ManyToManyField(blank=True, to='bitfit.Skill'),
        ),
        migrations.CreateModel(
            name='BuggyFunction',
            fields=[
                ('buggy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bitfit.Buggy')),
                ('function_name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Debugging Question (Function)',
                'verbose_name_plural': 'All Function Debugging Questions',
            },
            bases=('bitfit.buggy',),
        ),
        migrations.CreateModel(
            name='ProgrammingFunction',
            fields=[
                ('programming_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bitfit.Programming')),
                ('function_name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Programming Question (Function)',
                'verbose_name_plural': 'All Function Programming Questions',
            },
            bases=('bitfit.programming',),
        ),
        migrations.AddField(
            model_name='testcaseprogram',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bitfit.Programming'),
        ),
        migrations.AddField(
            model_name='testcasefunction',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bitfit.ProgrammingFunction'),
        ),
    ]
